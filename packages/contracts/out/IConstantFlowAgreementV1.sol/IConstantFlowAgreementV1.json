{"abi":[{"type":"function","name":"agreementType","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"authorizeFlowOperatorWithFullControl","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"flowOperator","type":"address","internalType":"address"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFlow","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"receiver","type":"address","internalType":"address"},{"name":"flowRate","type":"int96","internalType":"int96"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFlowByOperator","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"sender","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"flowRate","type":"int96","internalType":"int96"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"decreaseFlowRateAllowance","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"flowOperator","type":"address","internalType":"address"},{"name":"subtractedFlowRateAllowance","type":"int96","internalType":"int96"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteFlow","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"sender","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteFlowByOperator","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"sender","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"getAccountFlowInfo","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"},{"name":"flowRate","type":"int96","internalType":"int96"},{"name":"deposit","type":"uint256","internalType":"uint256"},{"name":"owedDeposit","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getDepositRequiredForFlowRate","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"flowRate","type":"int96","internalType":"int96"}],"outputs":[{"name":"deposit","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getFlow","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"sender","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"},{"name":"flowRate","type":"int96","internalType":"int96"},{"name":"deposit","type":"uint256","internalType":"uint256"},{"name":"owedDeposit","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getFlowByID","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"agreementId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"},{"name":"flowRate","type":"int96","internalType":"int96"},{"name":"deposit","type":"uint256","internalType":"uint256"},{"name":"owedDeposit","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getFlowOperatorData","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"sender","type":"address","internalType":"address"},{"name":"flowOperator","type":"address","internalType":"address"}],"outputs":[{"name":"flowOperatorId","type":"bytes32","internalType":"bytes32"},{"name":"permissions","type":"uint8","internalType":"uint8"},{"name":"flowRateAllowance","type":"int96","internalType":"int96"}],"stateMutability":"view"},{"type":"function","name":"getFlowOperatorDataByID","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"flowOperatorId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"permissions","type":"uint8","internalType":"uint8"},{"name":"flowRateAllowance","type":"int96","internalType":"int96"}],"stateMutability":"view"},{"type":"function","name":"getMaximumFlowRateFromDeposit","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"deposit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"flowRate","type":"int96","internalType":"int96"}],"stateMutability":"view"},{"type":"function","name":"getNetFlow","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"flowRate","type":"int96","internalType":"int96"}],"stateMutability":"view"},{"type":"function","name":"increaseFlowRateAllowance","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"flowOperator","type":"address","internalType":"address"},{"name":"addedFlowRateAllowance","type":"int96","internalType":"int96"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPatricianPeriod","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"account","type":"address","internalType":"address"},{"name":"timestamp","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPatricianPeriodNow","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"isCurrentlyPatricianPeriod","type":"bool","internalType":"bool"},{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"realtimeBalanceOf","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"account","type":"address","internalType":"address"},{"name":"time","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"dynamicBalance","type":"int256","internalType":"int256"},{"name":"deposit","type":"uint256","internalType":"uint256"},{"name":"owedDeposit","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"revokeFlowOperatorWithFullControl","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"flowOperator","type":"address","internalType":"address"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateFlow","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"receiver","type":"address","internalType":"address"},{"name":"flowRate","type":"int96","internalType":"int96"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateFlowByOperator","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"sender","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"flowRate","type":"int96","internalType":"int96"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateFlowOperatorPermissions","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"flowOperator","type":"address","internalType":"address"},{"name":"permissions","type":"uint8","internalType":"uint8"},{"name":"flowRateAllowance","type":"int96","internalType":"int96"},{"name":"ctx","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newCtx","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"event","name":"FlowOperatorUpdated","inputs":[{"name":"token","type":"address","indexed":true,"internalType":"contract ISuperfluidToken"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"flowOperator","type":"address","indexed":true,"internalType":"address"},{"name":"permissions","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"flowRateAllowance","type":"int96","indexed":false,"internalType":"int96"}],"anonymous":false},{"type":"event","name":"FlowUpdated","inputs":[{"name":"token","type":"address","indexed":true,"internalType":"contract ISuperfluidToken"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"flowRate","type":"int96","indexed":false,"internalType":"int96"},{"name":"totalSenderFlowRate","type":"int256","indexed":false,"internalType":"int256"},{"name":"totalReceiverFlowRate","type":"int256","indexed":false,"internalType":"int256"},{"name":"userData","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"FlowUpdatedExtension","inputs":[{"name":"flowOperator","type":"address","indexed":true,"internalType":"address"},{"name":"deposit","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"CFA_ACL_FLOW_RATE_ALLOWANCE_EXCEEDED","inputs":[]},{"type":"error","name":"CFA_ACL_NO_NEGATIVE_ALLOWANCE","inputs":[]},{"type":"error","name":"CFA_ACL_NO_SENDER_CREATE","inputs":[]},{"type":"error","name":"CFA_ACL_NO_SENDER_FLOW_OPERATOR","inputs":[]},{"type":"error","name":"CFA_ACL_NO_SENDER_UPDATE","inputs":[]},{"type":"error","name":"CFA_ACL_OPERATOR_NO_CREATE_PERMISSIONS","inputs":[]},{"type":"error","name":"CFA_ACL_OPERATOR_NO_DELETE_PERMISSIONS","inputs":[]},{"type":"error","name":"CFA_ACL_OPERATOR_NO_UPDATE_PERMISSIONS","inputs":[]},{"type":"error","name":"CFA_ACL_UNCLEAN_PERMISSIONS","inputs":[]},{"type":"error","name":"CFA_DEPOSIT_TOO_BIG","inputs":[]},{"type":"error","name":"CFA_FLOW_ALREADY_EXISTS","inputs":[]},{"type":"error","name":"CFA_FLOW_DOES_NOT_EXIST","inputs":[]},{"type":"error","name":"CFA_FLOW_RATE_TOO_BIG","inputs":[]},{"type":"error","name":"CFA_HOOK_OUT_OF_GAS","inputs":[]},{"type":"error","name":"CFA_INSUFFICIENT_BALANCE","inputs":[]},{"type":"error","name":"CFA_INVALID_FLOW_RATE","inputs":[]},{"type":"error","name":"CFA_NON_CRITICAL_SENDER","inputs":[]},{"type":"error","name":"CFA_NO_SELF_FLOW","inputs":[]},{"type":"error","name":"CFA_ZERO_ADDRESS_RECEIVER","inputs":[]},{"type":"error","name":"CFA_ZERO_ADDRESS_SENDER","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"agreementType()":"7730599e","authorizeFlowOperatorWithFullControl(address,address,bytes)":"54b770e3","createFlow(address,address,int96,bytes)":"62fc305e","createFlowByOperator(address,address,address,int96,bytes)":"94229ecb","decreaseFlowRateAllowance(address,address,int96,bytes)":"5f51fb23","deleteFlow(address,address,address,bytes)":"b4b333c6","deleteFlowByOperator(address,address,address,bytes)":"4c8b181f","getAccountFlowInfo(address,address)":"0f1ac495","getDepositRequiredForFlowRate(address,int96)":"8d997f6e","getFlow(address,address,address)":"e6a1e888","getFlowByID(address,bytes32)":"aabd2668","getFlowOperatorData(address,address,address)":"00422bbe","getFlowOperatorDataByID(address,bytes32)":"09d256ef","getMaximumFlowRateFromDeposit(address,uint256)":"0602f7db","getNetFlow(address,address)":"e8e7e2d1","increaseFlowRateAllowance(address,address,int96,bytes)":"ac5f5d00","isPatricianPeriod(address,address,uint256)":"4b839e0b","isPatricianPeriodNow(address,address)":"4fe9c291","realtimeBalanceOf(address,address,uint256)":"9b2e48bc","revokeFlowOperatorWithFullControl(address,address,bytes)":"062e56ec","updateFlow(address,address,int96,bytes)":"50209a62","updateFlowByOperator(address,address,address,int96,bytes)":"354b9590","updateFlowOperatorPermissions(address,address,uint8,int96,bytes)":"811b3d40"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CFA_ACL_FLOW_RATE_ALLOWANCE_EXCEEDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_NO_NEGATIVE_ALLOWANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_NO_SENDER_CREATE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_NO_SENDER_FLOW_OPERATOR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_NO_SENDER_UPDATE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_OPERATOR_NO_CREATE_PERMISSIONS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_OPERATOR_NO_DELETE_PERMISSIONS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_OPERATOR_NO_UPDATE_PERMISSIONS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_UNCLEAN_PERMISSIONS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_DEPOSIT_TOO_BIG\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_FLOW_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_FLOW_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_FLOW_RATE_TOO_BIG\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_HOOK_OUT_OF_GAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_INVALID_FLOW_RATE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NON_CRITICAL_SENDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NO_SELF_FLOW\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ZERO_ADDRESS_RECEIVER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ZERO_ADDRESS_SENDER\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"permissions\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"int96\",\"name\":\"flowRateAllowance\",\"type\":\"int96\"}],\"name\":\"FlowOperatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"totalSenderFlowRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"totalReceiverFlowRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"FlowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"FlowUpdatedExtension\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"authorizeFlowOperatorWithFullControl\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"createFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"createFlowByOperator\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"subtractedFlowRateAllowance\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"decreaseFlowRateAllowance\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"deleteFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"deleteFlowByOperator\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountFlowInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"name\":\"getDepositRequiredForFlowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getFlow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"}],\"name\":\"getFlowByID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"}],\"name\":\"getFlowOperatorData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"flowOperatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"permissions\",\"type\":\"uint8\"},{\"internalType\":\"int96\",\"name\":\"flowRateAllowance\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"flowOperatorId\",\"type\":\"bytes32\"}],\"name\":\"getFlowOperatorDataByID\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"permissions\",\"type\":\"uint8\"},{\"internalType\":\"int96\",\"name\":\"flowRateAllowance\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"getMaximumFlowRateFromDeposit\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNetFlow\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"addedFlowRateAllowance\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"increaseFlowRateAllowance\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isPatricianPeriod\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPatricianPeriodNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCurrentlyPatricianPeriod\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"revokeFlowOperatorWithFullControl\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"updateFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"updateFlowByOperator\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"permissions\",\"type\":\"uint8\"},{\"internalType\":\"int96\",\"name\":\"flowRateAllowance\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"updateFlowOperatorPermissions\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"FlowOperatorUpdated(address,address,address,uint8,int96)\":{\"details\":\"Flow operator updated event\",\"params\":{\"flowOperator\":\"Flow operator address\",\"flowRateAllowance\":\"The flow rate allowance the `flowOperator` is granted (only goes down)\",\"permissions\":\"Octo bitmask representation of permissions\",\"sender\":\"Flow sender address\",\"token\":\"Super token address\"}},\"FlowUpdated(address,address,address,int96,int256,int256,bytes)\":{\"details\":\"Flow updated event\",\"params\":{\"flowRate\":\"Flow rate in amount per second for this flow\",\"receiver\":\"Flow recipient address\",\"sender\":\"Flow sender address\",\"token\":\"Super token address\",\"totalReceiverFlowRate\":\"Total flow rate in amount per second for the receiver\",\"totalSenderFlowRate\":\"Total flow rate in amount per second for the sender\",\"userData\":\"The user provided data\"}},\"FlowUpdatedExtension(address,uint256)\":{\"details\":\"Flow updated extension event\",\"params\":{\"deposit\":\"The deposit amount for the stream\",\"flowOperator\":\"Flow operator address - the Context.msgSender\"}}},\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"ISuperAgreement.agreementType implementation\"},\"authorizeFlowOperatorWithFullControl(address,address,bytes)\":{\"details\":\"msgSender from `ctx` grants `flowOperator` all permissions with flowRateAllowance as type(int96).max\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"token\":\"Super token address\"}},\"createFlow(address,address,int96,bytes)\":{\"custom:callbacks\":\" - AgreementCreated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)\",\"custom:note\":\" - A deposit is taken as safety margin for the solvency agents - A extra gas fee may be taken to pay for solvency agent liquidations\",\"details\":\"flowId (agreementId) is the keccak256 hash of encoded sender and receiver\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowRate\":\"New flow rate in amount per second\",\"receiver\":\"Flow receiver address\",\"token\":\"Super token address\"}},\"createFlowByOperator(address,address,address,int96,bytes)\":{\"details\":\"A flow created by an approved flow operator (see above for details on callbacks)\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowRate\":\"New flow rate in amount per second\",\"receiver\":\"Flow receiver address\",\"sender\":\"Flow sender address (has granted permissions)\",\"token\":\"Super token address\"}},\"decreaseFlowRateAllowance(address,address,int96,bytes)\":{\"details\":\"msgSender from `ctx` decreases flow rate allowance for the `flowOperator` by `subtractedFlowRateAllowance`if `subtractedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"subtractedFlowRateAllowance\":\"The flow rate allowance delta\",\"token\":\"Super token address\"},\"returns\":{\"newCtx\":\"The new context bytes\"}},\"deleteFlow(address,address,address,bytes)\":{\"custom:callbacks\":\" - AgreementTerminated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)\",\"custom:note\":\" - Both flow sender and receiver may delete the flow - If Sender account is insolvent or in critical state, a solvency agent may   also terminate the agreement - Gas fee may be returned to the sender\",\"details\":\"flowId (agreementId) is the keccak256 hash of encoded sender and receiver\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"receiver\":\"Flow receiver address\",\"token\":\"Super token address\"}},\"deleteFlowByOperator(address,address,address,bytes)\":{\"details\":\"A flow deleted by an approved flow operator (see above for details on callbacks)\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"receiver\":\"Flow receiver address\",\"token\":\"Super token address\"}},\"getAccountFlowInfo(address,address)\":{\"details\":\"Get the aggregated flow info of the account\",\"params\":{\"account\":\"Account for the query\",\"token\":\"Super token address\"},\"returns\":{\"deposit\":\"The sum of all deposits for account's flows\",\"flowRate\":\"The net flow rate of token for account\",\"owedDeposit\":\"The sum of all owed deposits for account's flows\",\"timestamp\":\"Timestamp of when a flow was last updated for account\"}},\"getDepositRequiredForFlowRate(address,int96)\":{\"custom:note\":\" - if calculated deposit (flowRate * liquidationPeriod) is less   than the minimum deposit, we use the minimum deposit otherwise   we use the calculated deposit\",\"details\":\"Calculates the deposit based on the liquidationPeriod and flowRate\",\"params\":{\"flowRate\":\"Flow rate to be tested\"},\"returns\":{\"deposit\":\"The deposit amount based on flowRate and liquidationPeriod\"}},\"getFlow(address,address,address)\":{\"details\":\"Get the flow data between `sender` and `receiver` of `token`\",\"params\":{\"receiver\":\"Flow sender\",\"sender\":\"Flow receiver\",\"token\":\"Super token address\"},\"returns\":{\"deposit\":\"The amount of deposit the flow\",\"flowRate\":\"The flow rate\",\"owedDeposit\":\"The amount of owed deposit of the flow\",\"timestamp\":\"Timestamp of when the flow is updated\"}},\"getFlowByID(address,bytes32)\":{\"details\":\"flowId (agreementId) is the keccak256 hash of encoded sender and receiver\",\"params\":{\"agreementId\":\"The agreement ID\",\"token\":\"Super token address\"},\"returns\":{\"deposit\":\"The deposit amount of the flow\",\"flowRate\":\"The flow rate\",\"owedDeposit\":\"The owed deposit amount of the flow\",\"timestamp\":\"Timestamp of when the flow is updated\"}},\"getFlowOperatorData(address,address,address)\":{\"params\":{\"flowOperator\":\"The permission grantee address\",\"sender\":\"The permission granter address\",\"token\":\"Super token address\"},\"returns\":{\"flowOperatorId\":\"The keccak256 hash of encoded string \\\"flowOperator\\\", sender and flowOperator\",\"flowRateAllowance\":\"The flow rate allowance the `flowOperator` is granted (only goes down)\",\"permissions\":\"A bitmask representation of the granted permissions\"}},\"getFlowOperatorDataByID(address,bytes32)\":{\"params\":{\"flowOperatorId\":\"The keccak256 hash of encoded string \\\"flowOperator\\\", sender and flowOperator\",\"token\":\"Super token address\"},\"returns\":{\"flowRateAllowance\":\"The flow rate allowance the `flowOperator` is granted (only goes down)\",\"permissions\":\"A bitmask representation of the granted permissions\"}},\"getMaximumFlowRateFromDeposit(address,uint256)\":{\"details\":\"The deposit is clipped and rounded down\",\"params\":{\"deposit\":\"Deposit amount used for creating the flow\"},\"returns\":{\"flowRate\":\"The maximum flow rate\"}},\"getNetFlow(address,address)\":{\"details\":\"Get the net flow rate of the account\",\"params\":{\"account\":\"Account for the query\",\"token\":\"Super token address\"},\"returns\":{\"flowRate\":\"Net flow rate\"}},\"increaseFlowRateAllowance(address,address,int96,bytes)\":{\"details\":\"if `addedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\",\"params\":{\"addedFlowRateAllowance\":\"The flow rate allowance delta\",\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"token\":\"Super token address\"},\"returns\":{\"newCtx\":\"The new context bytes\"}},\"isPatricianPeriod(address,address,uint256)\":{\"details\":\"Returns whether it is the patrician period based on timestamp\",\"params\":{\"account\":\"The account we are interested in\",\"timestamp\":\"The timestamp we are interested in observing the result of isPatricianPeriod\"},\"returns\":{\"_0\":\"bool Whether it is currently the patrician period dictated by governance\"}},\"isPatricianPeriodNow(address,address)\":{\"details\":\"Returns whether it is the patrician period based on host.getNow()\",\"params\":{\"account\":\"The account we are interested in\"},\"returns\":{\"isCurrentlyPatricianPeriod\":\"Whether it is currently the patrician period dictated by governance\",\"timestamp\":\"The value of host.getNow()\"}},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Time used for the calculation\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement\",\"owedDeposit\":\"Account owed deposit amount of this agreement\"}},\"revokeFlowOperatorWithFullControl(address,address,bytes)\":{\"details\":\"`permissions` and `flowRateAllowance` will both be set to 0\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"token\":\"Super token address\"}},\"updateFlow(address,address,int96,bytes)\":{\"custom:callbacks\":\" - AgreementUpdated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)\",\"custom:note\":\" - Only the flow sender may update the flow rate - Even if the flow rate is zero, the flow is not deleted from the system - Deposit amount will be adjusted accordingly - No new gas fee is charged\",\"details\":\"flowId (agreementId) is the keccak256 hash of encoded sender and receiver\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowRate\":\"New flow rate in amount per second\",\"receiver\":\"Flow receiver address\",\"token\":\"Super token address\"}},\"updateFlowByOperator(address,address,address,int96,bytes)\":{\"details\":\"A flow updated by an approved flow operator (see above for details on callbacks)\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowRate\":\"New flow rate in amount per second\",\"receiver\":\"Flow receiver address\",\"sender\":\"Flow sender address (has granted permissions)\",\"token\":\"Super token address\"}},\"updateFlowOperatorPermissions(address,address,uint8,int96,bytes)\":{\"details\":\"msgSender from `ctx` updates permissions for the `flowOperator` with `flowRateAllowance`\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"flowRateAllowance\":\"The flow rate allowance the `flowOperator` is granted (only goes down)\",\"permissions\":\"A bitmask representation of the granted permissions\",\"token\":\"Super token address\"}}},\"title\":\"Constant Flow Agreement interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createFlow(address,address,int96,bytes)\":{\"notice\":\"Create a flow betwen ctx.msgSender and receiver\"},\"createFlowByOperator(address,address,address,int96,bytes)\":{\"notice\":\"Create a flow between sender and receiver\"},\"deleteFlow(address,address,address,bytes)\":{\"notice\":\"Delete the flow between sender and receiver\"},\"deleteFlowByOperator(address,address,address,bytes)\":{\"notice\":\"Delete the flow between sender and receiver\"},\"getDepositRequiredForFlowRate(address,int96)\":{\"notice\":\"Get the deposit required for creating the flow\"},\"getFlowByID(address,bytes32)\":{\"notice\":\"Get flow data using agreementId\"},\"getFlowOperatorData(address,address,address)\":{\"notice\":\"Get the permissions of a flow operator between `sender` and `flowOperator` for `token`\"},\"getFlowOperatorDataByID(address,bytes32)\":{\"notice\":\"Get flow operator using flowOperatorId\"},\"getMaximumFlowRateFromDeposit(address,uint256)\":{\"notice\":\"Get the maximum flow rate allowed with the deposit\"},\"increaseFlowRateAllowance(address,address,int96,bytes)\":{\"notice\":\"msgSender from `ctx` increases flow rate allowance for the `flowOperator` by `addedFlowRateAllowance`\"},\"revokeFlowOperatorWithFullControl(address,address,bytes)\":{\"notice\":\"msgSender from `ctx` revokes `flowOperator` create/update/delete permissions\"},\"updateFlow(address,address,int96,bytes)\":{\"notice\":\"Update the flow rate between ctx.msgSender and receiver\"},\"updateFlowByOperator(address,address,address,int96,bytes)\":{\"notice\":\"Update a flow between sender and receiver\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":\"IConstantFlowAgreementV1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@superfluid-finance/ethereum-contracts/contracts/=node_modules/@superfluid-finance/ethereum-contracts/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xb68e122faba133422f4cbdd7e15fc913073dfa2c3682c18d6449b121e67d1104\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://da0611fda964b8356d38cb006133865b58adc6e11d3817e27daf20b02ad6880f\",\"dweb:/ipfs/QmeLbak3yiUfkGvxEZzmS4ndDwDfxtZNeKiA86G3WxzjyD\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"CFA_ACL_FLOW_RATE_ALLOWANCE_EXCEEDED"},{"inputs":[],"type":"error","name":"CFA_ACL_NO_NEGATIVE_ALLOWANCE"},{"inputs":[],"type":"error","name":"CFA_ACL_NO_SENDER_CREATE"},{"inputs":[],"type":"error","name":"CFA_ACL_NO_SENDER_FLOW_OPERATOR"},{"inputs":[],"type":"error","name":"CFA_ACL_NO_SENDER_UPDATE"},{"inputs":[],"type":"error","name":"CFA_ACL_OPERATOR_NO_CREATE_PERMISSIONS"},{"inputs":[],"type":"error","name":"CFA_ACL_OPERATOR_NO_DELETE_PERMISSIONS"},{"inputs":[],"type":"error","name":"CFA_ACL_OPERATOR_NO_UPDATE_PERMISSIONS"},{"inputs":[],"type":"error","name":"CFA_ACL_UNCLEAN_PERMISSIONS"},{"inputs":[],"type":"error","name":"CFA_DEPOSIT_TOO_BIG"},{"inputs":[],"type":"error","name":"CFA_FLOW_ALREADY_EXISTS"},{"inputs":[],"type":"error","name":"CFA_FLOW_DOES_NOT_EXIST"},{"inputs":[],"type":"error","name":"CFA_FLOW_RATE_TOO_BIG"},{"inputs":[],"type":"error","name":"CFA_HOOK_OUT_OF_GAS"},{"inputs":[],"type":"error","name":"CFA_INSUFFICIENT_BALANCE"},{"inputs":[],"type":"error","name":"CFA_INVALID_FLOW_RATE"},{"inputs":[],"type":"error","name":"CFA_NON_CRITICAL_SENDER"},{"inputs":[],"type":"error","name":"CFA_NO_SELF_FLOW"},{"inputs":[],"type":"error","name":"CFA_ZERO_ADDRESS_RECEIVER"},{"inputs":[],"type":"error","name":"CFA_ZERO_ADDRESS_SENDER"},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"flowOperator","type":"address","indexed":true},{"internalType":"uint8","name":"permissions","type":"uint8","indexed":false},{"internalType":"int96","name":"flowRateAllowance","type":"int96","indexed":false}],"type":"event","name":"FlowOperatorUpdated","anonymous":false},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"int96","name":"flowRate","type":"int96","indexed":false},{"internalType":"int256","name":"totalSenderFlowRate","type":"int256","indexed":false},{"internalType":"int256","name":"totalReceiverFlowRate","type":"int256","indexed":false},{"internalType":"bytes","name":"userData","type":"bytes","indexed":false}],"type":"event","name":"FlowUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"flowOperator","type":"address","indexed":true},{"internalType":"uint256","name":"deposit","type":"uint256","indexed":false}],"type":"event","name":"FlowUpdatedExtension","anonymous":false},{"inputs":[],"stateMutability":"pure","type":"function","name":"agreementType","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"flowOperator","type":"address"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"authorizeFlowOperatorWithFullControl","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"int96","name":"flowRate","type":"int96"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createFlow","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"int96","name":"flowRate","type":"int96"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createFlowByOperator","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"flowOperator","type":"address"},{"internalType":"int96","name":"subtractedFlowRateAllowance","type":"int96"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"decreaseFlowRateAllowance","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deleteFlow","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deleteFlowByOperator","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getAccountFlowInfo","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"int96","name":"flowRate","type":"int96"},{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"uint256","name":"owedDeposit","type":"uint256"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"int96","name":"flowRate","type":"int96"}],"stateMutability":"view","type":"function","name":"getDepositRequiredForFlowRate","outputs":[{"internalType":"uint256","name":"deposit","type":"uint256"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"view","type":"function","name":"getFlow","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"int96","name":"flowRate","type":"int96"},{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"uint256","name":"owedDeposit","type":"uint256"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"bytes32","name":"agreementId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getFlowByID","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"int96","name":"flowRate","type":"int96"},{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"uint256","name":"owedDeposit","type":"uint256"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"flowOperator","type":"address"}],"stateMutability":"view","type":"function","name":"getFlowOperatorData","outputs":[{"internalType":"bytes32","name":"flowOperatorId","type":"bytes32"},{"internalType":"uint8","name":"permissions","type":"uint8"},{"internalType":"int96","name":"flowRateAllowance","type":"int96"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"bytes32","name":"flowOperatorId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getFlowOperatorDataByID","outputs":[{"internalType":"uint8","name":"permissions","type":"uint8"},{"internalType":"int96","name":"flowRateAllowance","type":"int96"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"uint256","name":"deposit","type":"uint256"}],"stateMutability":"view","type":"function","name":"getMaximumFlowRateFromDeposit","outputs":[{"internalType":"int96","name":"flowRate","type":"int96"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNetFlow","outputs":[{"internalType":"int96","name":"flowRate","type":"int96"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"flowOperator","type":"address"},{"internalType":"int96","name":"addedFlowRateAllowance","type":"int96"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"increaseFlowRateAllowance","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function","name":"isPatricianPeriod","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPatricianPeriodNow","outputs":[{"internalType":"bool","name":"isCurrentlyPatricianPeriod","type":"bool"},{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"time","type":"uint256"}],"stateMutability":"view","type":"function","name":"realtimeBalanceOf","outputs":[{"internalType":"int256","name":"dynamicBalance","type":"int256"},{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"uint256","name":"owedDeposit","type":"uint256"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"flowOperator","type":"address"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"revokeFlowOperatorWithFullControl","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"int96","name":"flowRate","type":"int96"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"updateFlow","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"int96","name":"flowRate","type":"int96"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"updateFlowByOperator","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"address","name":"flowOperator","type":"address"},{"internalType":"uint8","name":"permissions","type":"uint8"},{"internalType":"int96","name":"flowRateAllowance","type":"int96"},{"internalType":"bytes","name":"ctx","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"updateFlowOperatorPermissions","outputs":[{"internalType":"bytes","name":"newCtx","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{"agreementType()":{"details":"ISuperAgreement.agreementType implementation"},"authorizeFlowOperatorWithFullControl(address,address,bytes)":{"details":"msgSender from `ctx` grants `flowOperator` all permissions with flowRateAllowance as type(int96).max","params":{"ctx":"Context bytes (see ISuperfluid.sol for Context struct)","flowOperator":"The permission grantee address","token":"Super token address"}},"createFlow(address,address,int96,bytes)":{"custom:callbacks":" - AgreementCreated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)","custom:note":" - A deposit is taken as safety margin for the solvency agents - A extra gas fee may be taken to pay for solvency agent liquidations","details":"flowId (agreementId) is the keccak256 hash of encoded sender and receiver","params":{"ctx":"Context bytes (see ISuperfluid.sol for Context struct)","flowRate":"New flow rate in amount per second","receiver":"Flow receiver address","token":"Super token address"}},"createFlowByOperator(address,address,address,int96,bytes)":{"details":"A flow created by an approved flow operator (see above for details on callbacks)","params":{"ctx":"Context bytes (see ISuperfluid.sol for Context struct)","flowRate":"New flow rate in amount per second","receiver":"Flow receiver address","sender":"Flow sender address (has granted permissions)","token":"Super token address"}},"decreaseFlowRateAllowance(address,address,int96,bytes)":{"details":"msgSender from `ctx` decreases flow rate allowance for the `flowOperator` by `subtractedFlowRateAllowance`if `subtractedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE","params":{"ctx":"Context bytes (see ISuperfluid.sol for Context struct)","flowOperator":"The permission grantee address","subtractedFlowRateAllowance":"The flow rate allowance delta","token":"Super token address"},"returns":{"newCtx":"The new context bytes"}},"deleteFlow(address,address,address,bytes)":{"custom:callbacks":" - AgreementTerminated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)","custom:note":" - Both flow sender and receiver may delete the flow - If Sender account is insolvent or in critical state, a solvency agent may   also terminate the agreement - Gas fee may be returned to the sender","details":"flowId (agreementId) is the keccak256 hash of encoded sender and receiver","params":{"ctx":"Context bytes (see ISuperfluid.sol for Context struct)","receiver":"Flow receiver address","token":"Super token address"}},"deleteFlowByOperator(address,address,address,bytes)":{"details":"A flow deleted by an approved flow operator (see above for details on callbacks)","params":{"ctx":"Context bytes (see ISuperfluid.sol for Context struct)","receiver":"Flow receiver address","token":"Super token address"}},"getAccountFlowInfo(address,address)":{"details":"Get the aggregated flow info of the account","params":{"account":"Account for the query","token":"Super token address"},"returns":{"deposit":"The sum of all deposits for account's flows","flowRate":"The net flow rate of token for account","owedDeposit":"The sum of all owed deposits for account's flows","timestamp":"Timestamp of when a flow was last updated for account"}},"getDepositRequiredForFlowRate(address,int96)":{"custom:note":" - if calculated deposit (flowRate * liquidationPeriod) is less   than the minimum deposit, we use the minimum deposit otherwise   we use the calculated deposit","details":"Calculates the deposit based on the liquidationPeriod and flowRate","params":{"flowRate":"Flow rate to be tested"},"returns":{"deposit":"The deposit amount based on flowRate and liquidationPeriod"}},"getFlow(address,address,address)":{"details":"Get the flow data between `sender` and `receiver` of `token`","params":{"receiver":"Flow sender","sender":"Flow receiver","token":"Super token address"},"returns":{"deposit":"The amount of deposit the flow","flowRate":"The flow rate","owedDeposit":"The amount of owed deposit of the flow","timestamp":"Timestamp of when the flow is updated"}},"getFlowByID(address,bytes32)":{"details":"flowId (agreementId) is the keccak256 hash of encoded sender and receiver","params":{"agreementId":"The agreement ID","token":"Super token address"},"returns":{"deposit":"The deposit amount of the flow","flowRate":"The flow rate","owedDeposit":"The owed deposit amount of the flow","timestamp":"Timestamp of when the flow is updated"}},"getFlowOperatorData(address,address,address)":{"params":{"flowOperator":"The permission grantee address","sender":"The permission granter address","token":"Super token address"},"returns":{"flowOperatorId":"The keccak256 hash of encoded string \"flowOperator\", sender and flowOperator","flowRateAllowance":"The flow rate allowance the `flowOperator` is granted (only goes down)","permissions":"A bitmask representation of the granted permissions"}},"getFlowOperatorDataByID(address,bytes32)":{"params":{"flowOperatorId":"The keccak256 hash of encoded string \"flowOperator\", sender and flowOperator","token":"Super token address"},"returns":{"flowRateAllowance":"The flow rate allowance the `flowOperator` is granted (only goes down)","permissions":"A bitmask representation of the granted permissions"}},"getMaximumFlowRateFromDeposit(address,uint256)":{"details":"The deposit is clipped and rounded down","params":{"deposit":"Deposit amount used for creating the flow"},"returns":{"flowRate":"The maximum flow rate"}},"getNetFlow(address,address)":{"details":"Get the net flow rate of the account","params":{"account":"Account for the query","token":"Super token address"},"returns":{"flowRate":"Net flow rate"}},"increaseFlowRateAllowance(address,address,int96,bytes)":{"details":"if `addedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE","params":{"addedFlowRateAllowance":"The flow rate allowance delta","ctx":"Context bytes (see ISuperfluid.sol for Context struct)","flowOperator":"The permission grantee address","token":"Super token address"},"returns":{"newCtx":"The new context bytes"}},"isPatricianPeriod(address,address,uint256)":{"details":"Returns whether it is the patrician period based on timestamp","params":{"account":"The account we are interested in","timestamp":"The timestamp we are interested in observing the result of isPatricianPeriod"},"returns":{"_0":"bool Whether it is currently the patrician period dictated by governance"}},"isPatricianPeriodNow(address,address)":{"details":"Returns whether it is the patrician period based on host.getNow()","params":{"account":"The account we are interested in"},"returns":{"isCurrentlyPatricianPeriod":"Whether it is currently the patrician period dictated by governance","timestamp":"The value of host.getNow()"}},"realtimeBalanceOf(address,address,uint256)":{"details":"Calculate the real-time balance for the account of this agreement class","params":{"account":"Account the state belongs to","time":"Time used for the calculation"},"returns":{"deposit":"Account deposit amount of this agreement","dynamicBalance":"Dynamic balance portion of real-time balance of this agreement","owedDeposit":"Account owed deposit amount of this agreement"}},"revokeFlowOperatorWithFullControl(address,address,bytes)":{"details":"`permissions` and `flowRateAllowance` will both be set to 0","params":{"ctx":"Context bytes (see ISuperfluid.sol for Context struct)","flowOperator":"The permission grantee address","token":"Super token address"}},"updateFlow(address,address,int96,bytes)":{"custom:callbacks":" - AgreementUpdated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)","custom:note":" - Only the flow sender may update the flow rate - Even if the flow rate is zero, the flow is not deleted from the system - Deposit amount will be adjusted accordingly - No new gas fee is charged","details":"flowId (agreementId) is the keccak256 hash of encoded sender and receiver","params":{"ctx":"Context bytes (see ISuperfluid.sol for Context struct)","flowRate":"New flow rate in amount per second","receiver":"Flow receiver address","token":"Super token address"}},"updateFlowByOperator(address,address,address,int96,bytes)":{"details":"A flow updated by an approved flow operator (see above for details on callbacks)","params":{"ctx":"Context bytes (see ISuperfluid.sol for Context struct)","flowRate":"New flow rate in amount per second","receiver":"Flow receiver address","sender":"Flow sender address (has granted permissions)","token":"Super token address"}},"updateFlowOperatorPermissions(address,address,uint8,int96,bytes)":{"details":"msgSender from `ctx` updates permissions for the `flowOperator` with `flowRateAllowance`","params":{"ctx":"Context bytes (see ISuperfluid.sol for Context struct)","flowOperator":"The permission grantee address","flowRateAllowance":"The flow rate allowance the `flowOperator` is granted (only goes down)","permissions":"A bitmask representation of the granted permissions","token":"Super token address"}}},"version":1},"userdoc":{"kind":"user","methods":{"createFlow(address,address,int96,bytes)":{"notice":"Create a flow betwen ctx.msgSender and receiver"},"createFlowByOperator(address,address,address,int96,bytes)":{"notice":"Create a flow between sender and receiver"},"deleteFlow(address,address,address,bytes)":{"notice":"Delete the flow between sender and receiver"},"deleteFlowByOperator(address,address,address,bytes)":{"notice":"Delete the flow between sender and receiver"},"getDepositRequiredForFlowRate(address,int96)":{"notice":"Get the deposit required for creating the flow"},"getFlowByID(address,bytes32)":{"notice":"Get flow data using agreementId"},"getFlowOperatorData(address,address,address)":{"notice":"Get the permissions of a flow operator between `sender` and `flowOperator` for `token`"},"getFlowOperatorDataByID(address,bytes32)":{"notice":"Get flow operator using flowOperatorId"},"getMaximumFlowRateFromDeposit(address,uint256)":{"notice":"Get the maximum flow rate allowed with the deposit"},"increaseFlowRateAllowance(address,address,int96,bytes)":{"notice":"msgSender from `ctx` increases flow rate allowance for the `flowOperator` by `addedFlowRateAllowance`"},"revokeFlowOperatorWithFullControl(address,address,bytes)":{"notice":"msgSender from `ctx` revokes `flowOperator` create/update/delete permissions"},"updateFlow(address,address,int96,bytes)":{"notice":"Update the flow rate between ctx.msgSender and receiver"},"updateFlowByOperator(address,address,address,int96,bytes)":{"notice":"Update a flow between sender and receiver"}},"version":1}},"settings":{"remappings":["@latticexyz/=node_modules/@latticexyz/","@openzeppelin/=node_modules/@openzeppelin/","@superfluid-finance/ethereum-contracts/contracts/=node_modules/@superfluid-finance/ethereum-contracts/contracts/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/src/"],"optimizer":{"enabled":true,"runs":3000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol":"IConstantFlowAgreementV1"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol":{"keccak256":"0xb68e122faba133422f4cbdd7e15fc913073dfa2c3682c18d6449b121e67d1104","urls":["bzz-raw://da0611fda964b8356d38cb006133865b58adc6e11d3817e27daf20b02ad6880f","dweb:/ipfs/QmeLbak3yiUfkGvxEZzmS4ndDwDfxtZNeKiA86G3WxzjyD"],"license":"AGPLv3"},"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol":{"keccak256":"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e","urls":["bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820","dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW"],"license":"AGPLv3"},"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol":{"keccak256":"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6","urls":["bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72","dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY"],"license":"AGPLv3"}},"version":1},"id":79}