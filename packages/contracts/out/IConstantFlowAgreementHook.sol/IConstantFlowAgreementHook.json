{"abi":[{"type":"function","name":"onCreate","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"newFlowData","type":"tuple","internalType":"struct IConstantFlowAgreementHook.CFAHookParams","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"flowOperator","type":"address","internalType":"address"},{"name":"flowRate","type":"int96","internalType":"int96"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onDelete","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"newFlowData","type":"tuple","internalType":"struct IConstantFlowAgreementHook.CFAHookParams","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"flowOperator","type":"address","internalType":"address"},{"name":"flowRate","type":"int96","internalType":"int96"}]},{"name":"oldFlowRate","type":"int96","internalType":"int96"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onUpdate","inputs":[{"name":"token","type":"address","internalType":"contract ISuperfluidToken"},{"name":"newFlowData","type":"tuple","internalType":"struct IConstantFlowAgreementHook.CFAHookParams","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"flowOperator","type":"address","internalType":"address"},{"name":"flowRate","type":"int96","internalType":"int96"}]},{"name":"oldFlowRate","type":"int96","internalType":"int96"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onCreate(address,(address,address,address,int96))":"e3d8fefe","onDelete(address,(address,address,address,int96),int96)":"2742e95a","onUpdate(address,(address,address,address,int96),int96)":"6ac5bc31"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"internalType\":\"struct IConstantFlowAgreementHook.CFAHookParams\",\"name\":\"newFlowData\",\"type\":\"tuple\"}],\"name\":\"onCreate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"internalType\":\"struct IConstantFlowAgreementHook.CFAHookParams\",\"name\":\"newFlowData\",\"type\":\"tuple\"},{\"internalType\":\"int96\",\"name\":\"oldFlowRate\",\"type\":\"int96\"}],\"name\":\"onDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"internalType\":\"struct IConstantFlowAgreementHook.CFAHookParams\",\"name\":\"newFlowData\",\"type\":\"tuple\"},{\"internalType\":\"int96\",\"name\":\"oldFlowRate\",\"type\":\"int96\"}],\"name\":\"onUpdate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"The contract that implements this interface MUST only allow the CFA contract to call it\",\"kind\":\"dev\",\"methods\":{\"onCreate(address,(address,address,address,int96))\":{\"details\":\"This should be implemented with an onlyCFA modifier, so that only the CFA can call the function\",\"params\":{\"newFlowData\":\"the new flow data taken by the hook\",\"token\":\"the streamed super token\"},\"returns\":{\"_0\":\"bool\"}},\"onDelete(address,(address,address,address,int96),int96)\":{\"details\":\"This should be implemented with an onlyCFA modifier, so that only the CFA can call the function\",\"params\":{\"newFlowData\":\"the new flow data taken by the hook\",\"oldFlowRate\":\"previous flowrate\",\"token\":\"the streamed super token\"},\"returns\":{\"_0\":\"bool\"}},\"onUpdate(address,(address,address,address,int96),int96)\":{\"details\":\"This should be implemented with an onlyCFA modifier, so that only the CFA can call the function\",\"params\":{\"newFlowData\":\"the new flow data taken by the hook\",\"oldFlowRate\":\"previous flowrate\",\"token\":\"the streamed super token\"},\"returns\":{\"_0\":\"bool\"}}},\"title\":\"IConstantFlowAgreementHook interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onCreate(address,(address,address,address,int96))\":{\"notice\":\"A hook which executes on stream creation if the hook contract is set in the CFA\"},\"onDelete(address,(address,address,address,int96),int96)\":{\"notice\":\"A hook which executes on stream deletion if the hook contract is set in the CFA\"},\"onUpdate(address,(address,address,address,int96),int96)\":{\"notice\":\"A hook which executes on stream update if the hook contract is set in the CFA\"}},\"notice\":\"An interface for the functions needed by a CFA hook contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol\":\"IConstantFlowAgreementHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@superfluid-finance/ethereum-contracts/contracts/=node_modules/@superfluid-finance/ethereum-contracts/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol\":{\"keccak256\":\"0x908b492d11c73d5f7f1707b3faf8e29aa5b6b35618b40e4b0c8f68873cbcf69b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c7f2f71936ff6dab1f5c854f2d4fa5d37b576c0e904369ea240d96eab58781f\",\"dweb:/ipfs/QmZJCdchrpjZeuCZBo7okXnjxLFheLJcXvWqxLkxm5V5fv\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"struct IConstantFlowAgreementHook.CFAHookParams","name":"newFlowData","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"flowOperator","type":"address"},{"internalType":"int96","name":"flowRate","type":"int96"}]}],"stateMutability":"nonpayable","type":"function","name":"onCreate","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"struct IConstantFlowAgreementHook.CFAHookParams","name":"newFlowData","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"flowOperator","type":"address"},{"internalType":"int96","name":"flowRate","type":"int96"}]},{"internalType":"int96","name":"oldFlowRate","type":"int96"}],"stateMutability":"nonpayable","type":"function","name":"onDelete","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"contract ISuperfluidToken","name":"token","type":"address"},{"internalType":"struct IConstantFlowAgreementHook.CFAHookParams","name":"newFlowData","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"flowOperator","type":"address"},{"internalType":"int96","name":"flowRate","type":"int96"}]},{"internalType":"int96","name":"oldFlowRate","type":"int96"}],"stateMutability":"nonpayable","type":"function","name":"onUpdate","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"onCreate(address,(address,address,address,int96))":{"details":"This should be implemented with an onlyCFA modifier, so that only the CFA can call the function","params":{"newFlowData":"the new flow data taken by the hook","token":"the streamed super token"},"returns":{"_0":"bool"}},"onDelete(address,(address,address,address,int96),int96)":{"details":"This should be implemented with an onlyCFA modifier, so that only the CFA can call the function","params":{"newFlowData":"the new flow data taken by the hook","oldFlowRate":"previous flowrate","token":"the streamed super token"},"returns":{"_0":"bool"}},"onUpdate(address,(address,address,address,int96),int96)":{"details":"This should be implemented with an onlyCFA modifier, so that only the CFA can call the function","params":{"newFlowData":"the new flow data taken by the hook","oldFlowRate":"previous flowrate","token":"the streamed super token"},"returns":{"_0":"bool"}}},"version":1},"userdoc":{"kind":"user","methods":{"onCreate(address,(address,address,address,int96))":{"notice":"A hook which executes on stream creation if the hook contract is set in the CFA"},"onDelete(address,(address,address,address,int96),int96)":{"notice":"A hook which executes on stream deletion if the hook contract is set in the CFA"},"onUpdate(address,(address,address,address,int96),int96)":{"notice":"A hook which executes on stream update if the hook contract is set in the CFA"}},"version":1}},"settings":{"remappings":["@latticexyz/=node_modules/@latticexyz/","@openzeppelin/=node_modules/@openzeppelin/","@superfluid-finance/ethereum-contracts/contracts/=node_modules/@superfluid-finance/ethereum-contracts/contracts/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/src/"],"optimizer":{"enabled":true,"runs":3000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol":"IConstantFlowAgreementHook"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol":{"keccak256":"0x908b492d11c73d5f7f1707b3faf8e29aa5b6b35618b40e4b0c8f68873cbcf69b","urls":["bzz-raw://6c7f2f71936ff6dab1f5c854f2d4fa5d37b576c0e904369ea240d96eab58781f","dweb:/ipfs/QmZJCdchrpjZeuCZBo7okXnjxLFheLJcXvWqxLkxm5V5fv"],"license":"AGPLv3"},"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol":{"keccak256":"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e","urls":["bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820","dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW"],"license":"AGPLv3"},"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol":{"keccak256":"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6","urls":["bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72","dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY"],"license":"AGPLv3"}},"version":1},"id":78}